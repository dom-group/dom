/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface PriceLibraryInterface extends ethers.utils.Interface {
  functions: {
    "price(address,address,address)": FunctionFragment;
    "unit(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "price",
    values: [string, string, string]
  ): string;
  encodeFunctionData(functionFragment: "unit", values: [string]): string;

  decodeFunctionResult(functionFragment: "price", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "unit", data: BytesLike): Result;

  events: {};
}

export class PriceLibrary extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: PriceLibraryInterface;

  functions: {
    price(
      _factory: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<{
      inAmount: BigNumber;
      outAmount: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "price(address,address,address)"(
      _factory: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<{
      inAmount: BigNumber;
      outAmount: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    unit(
      token: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;

    "unit(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<{
      0: BigNumber;
    }>;
  };

  price(
    _factory: string,
    _from: string,
    _to: string,
    overrides?: CallOverrides
  ): Promise<{
    inAmount: BigNumber;
    outAmount: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  "price(address,address,address)"(
    _factory: string,
    _from: string,
    _to: string,
    overrides?: CallOverrides
  ): Promise<{
    inAmount: BigNumber;
    outAmount: BigNumber;
    0: BigNumber;
    1: BigNumber;
  }>;

  unit(token: string, overrides?: CallOverrides): Promise<BigNumber>;

  "unit(address)"(token: string, overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    price(
      _factory: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<{
      inAmount: BigNumber;
      outAmount: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    "price(address,address,address)"(
      _factory: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<{
      inAmount: BigNumber;
      outAmount: BigNumber;
      0: BigNumber;
      1: BigNumber;
    }>;

    unit(token: string, overrides?: CallOverrides): Promise<BigNumber>;

    "unit(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    price(
      _factory: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "price(address,address,address)"(
      _factory: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unit(token: string, overrides?: CallOverrides): Promise<BigNumber>;

    "unit(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    price(
      _factory: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "price(address,address,address)"(
      _factory: string,
      _from: string,
      _to: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unit(
      token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "unit(address)"(
      token: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
