{
  "address": "0x8C7AE305205ECC2DF017bf7e9c014fA01188175A",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_pToken",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_domToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_primaryAddr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "Promote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userAddr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_power",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_userAddr",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        }
      ],
      "name": "Register",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "burn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "referrer",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dead",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "domToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "index2User",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddr",
          "type": "address"
        }
      ],
      "name": "isExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "levelList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "marketList",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primaryAddr",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_level",
          "type": "uint256"
        }
      ],
      "name": "promote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_power",
          "type": "uint256"
        }
      ],
      "name": "redeemPower",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_userAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_power",
          "type": "uint256"
        }
      ],
      "name": "referReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_referrer",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_domToken",
          "type": "address"
        }
      ],
      "name": "setDomToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "_usdtToken",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_levelId",
          "type": "uint256"
        },
        {
          "internalType": "uint256[20]",
          "name": "_levelRewardList",
          "type": "uint256[20]"
        }
      ],
      "name": "setLevelRewardList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[10]",
          "name": "_marketList",
          "type": "uint256[10]"
        }
      ],
      "name": "setMarketList",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_pToken",
          "type": "address"
        }
      ],
      "name": "setPToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "direct",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "renounce",
          "type": "bool"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdtToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "userCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8953f438d3446753628748ff2a5d677bac21ebf7c43ed57a114837a2dea5cd22",
  "receipt": {
    "to": null,
    "from": "0xBc6339a0227DD17EB4a9941CCA2D2764c73310d8",
    "contractAddress": "0x8C7AE305205ECC2DF017bf7e9c014fA01188175A",
    "transactionIndex": 4,
    "gasUsed": "3040595",
    "logsBloom": "0x
    "blockHash": "0x5ac58d59e4eb159fe796badfcb2d2edb040020eef2c89046b42129760fb5aa97",
    "transactionHash": "0x8953f438d3446753628748ff2a5d677bac21ebf7c43ed57a114837a2dea5cd22",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 10377387,
        "transactionHash": "0x8953f438d3446753628748ff2a5d677bac21ebf7c43ed57a114837a2dea5cd22",
        "address": "0x8C7AE305205ECC2DF017bf7e9c014fA01188175A",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000bc6339a0227dd17eb4a9941cca2d2764c73310d8"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x5ac58d59e4eb159fe796badfcb2d2edb040020eef2c89046b42129760fb5aa97"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 10377387,
        "transactionHash": "0x8953f438d3446753628748ff2a5d677bac21ebf7c43ed57a114837a2dea5cd22",
        "address": "0x8C7AE305205ECC2DF017bf7e9c014fA01188175A",
        "topics": [
          "0x98ada70a1cb506dc4591465e1ee9be3fd7a2b6c73ecf3b949009718c9a351519",
          "0x000000000000000000000000bc6339a0227dd17eb4a9941cca2d2764c73310d8",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 10,
        "blockHash": "0x5ac58d59e4eb159fe796badfcb2d2edb040020eef2c89046b42129760fb5aa97"
      }
    ],
    "blockNumber": 10377387,
    "cumulativeGasUsed": "4837777",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5BE3748695e5dC6a253966120caE616F07a007Df",
    "0x15DDeb4F5A1b37001583DffE1aC420a0463517f9",
    "0xBc6339a0227DD17EB4a9941CCA2D2764c73310d8"
  ],
  "solcInputHash": "e60763e8c2dcc87bacfac648f852c4e7",
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_pToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_domToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_primaryAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"Promote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"Register\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"burn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dead\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"index2User\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"}],\"name\":\"isExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"marketList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primaryAddr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"promote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"redeemPower\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_power\",\"type\":\"uint256\"}],\"name\":\"referReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_referrer\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_domToken\",\"type\":\"address\"}],\"name\":\"setDomToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_usdtToken\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_levelId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[20]\",\"name\":\"_levelRewardList\",\"type\":\"uint256[20]\"}],\"name\":\"setLevelRewardList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[10]\",\"name\":\"_marketList\",\"type\":\"uint256[10]\"}],\"name\":\"setMarketList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_pToken\",\"type\":\"address\"}],\"name\":\"setPToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"direct\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"renounce\",\"type\":\"bool\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdtToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/invite.sol\":\"DomInvitation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.6.8;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function name() external view returns (string memory);\\r\\n    function symbol() external view returns (string memory);\\r\\n    function decimals() external view returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n    function mint(address to, uint256 amount) external returns (bool);\\r\\n    function burn(address to, uint256 amount) external;\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n}\\r\\n\",\"keccak256\":\"0xe5156df52d081edfc8dab16d5d6fc44a33880f8e97da3fd857cd082d480b0acd\",\"license\":\"MIT\"},\"contracts/IPancakeFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.0;\\r\\ninterface IPancakeFactory {\\r\\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\\r\\n    function allPairs(uint) external view returns (address pair);\\r\\n    function allPairsLength() external view returns (uint);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB) external returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\ninterface IPancakePair {\\r\\n    event Approval(address indexed owner, address indexed spender, uint value);\\r\\n    event Transfer(address indexed from, address indexed to, uint value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n    function symbol() external pure returns (string memory);\\r\\n    function decimals() external pure returns (uint8);\\r\\n    function totalSupply() external view returns (uint);\\r\\n    function balanceOf(address owner) external view returns (uint);\\r\\n    function allowance(address owner, address spender) external view returns (uint);\\r\\n\\r\\n    function approve(address spender, uint value) external returns (bool);\\r\\n    function transfer(address to, uint value) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint value) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n    function nonces(address owner) external view returns (uint);\\r\\n\\r\\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\\r\\n\\r\\n    event Mint(address indexed sender, uint amount0, uint amount1);\\r\\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint amount0In,\\r\\n        uint amount1In,\\r\\n        uint amount0Out,\\r\\n        uint amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\\r\\n    function factory() external view returns (address);\\r\\n    function token0() external view returns (address);\\r\\n    function token1() external view returns (address);\\r\\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\\r\\n    function price0CumulativeLast() external view returns (uint);\\r\\n    function price1CumulativeLast() external view returns (uint);\\r\\n    function kLast() external view returns (uint);\\r\\n\\r\\n    function mint(address to) external returns (uint liquidity);\\r\\n    function burn(address to) external returns (uint amount0, uint amount1);\\r\\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\\r\\n    function skim(address to) external;\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\",\"keccak256\":\"0xb795094d9e575fe6b392505a901dbef536982a0a9993498b28b24ad15bbe639e\",\"license\":\"MIT\"},\"contracts/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.8;\\r\\ncontract OwnableData {\\r\\n    // V1 - V5: OK\\r\\n    address public owner;\\r\\n    // V1 - V5: OK\\r\\n    address public pendingOwner;\\r\\n}\\r\\n// T1 - T4: OK\\r\\ncontract Ownable is OwnableData {\\r\\n    // E1: OK\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    constructor () public {\\r\\n        owner = msg.sender;\\r\\n        emit OwnershipTransferred(address(0), msg.sender);\\r\\n    }\\r\\n\\r\\n    // F1 - F9: OK\\r\\n    // C1 - C21: OK\\r\\n    function transferOwnership(address newOwner, bool direct, bool renounce) public onlyOwner {\\r\\n        if (direct) {\\r\\n            // Checks\\r\\n            require(newOwner != address(0) || renounce, \\\"Ownable: zero address\\\");\\r\\n\\r\\n            // Effects\\r\\n            emit OwnershipTransferred(owner, newOwner);\\r\\n            owner = newOwner;\\r\\n            pendingOwner = address(0);\\r\\n        } else {\\r\\n            // Effects\\r\\n            pendingOwner = newOwner;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // F1 - F9: OK\\r\\n    // C1 - C21: OK\\r\\n    function claimOwnership() public {\\r\\n        address _pendingOwner = pendingOwner;\\r\\n        \\r\\n        // Checks\\r\\n        require(msg.sender == _pendingOwner, \\\"Ownable: caller != pending owner\\\");\\r\\n\\r\\n        // Effects\\r\\n        emit OwnershipTransferred(owner, _pendingOwner);\\r\\n        owner = _pendingOwner;\\r\\n        pendingOwner = address(0);\\r\\n    }\\r\\n\\r\\n    // M1 - M5: OK\\r\\n    // C1 - C21: OK\\r\\n    modifier onlyOwner() {\\r\\n        require(msg.sender == owner, \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x242ef02a38e6917c2cc4982b38a7ab066f127f6a1c6f47968b0cf4f887f0fbdd\",\"license\":\"MIT\"},\"contracts/PriceLibrary.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.8;\\r\\nimport \\\"./SafeMath.sol\\\";\\r\\nimport \\\"./IERC20.sol\\\";\\r\\nimport \\\"./IPancakeFactory.sol\\\";\\r\\n\\r\\nlibrary PriceLibrary {\\r\\n\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    function price(address _factory, address _from, address _to) public view returns(uint inAmount,uint outAmount) { \\r\\n        inAmount = unit(_from);\\r\\n        if(_from==_to){\\r\\n            return (inAmount,inAmount);\\r\\n        }\\r\\n        \\r\\n        address _pair = IPancakeFactory(_factory).getPair(_from, _to);\\r\\n        \\r\\n        if(_pair!=address(0)){\\r\\n            IPancakePair pair = IPancakePair(_pair);\\r\\n            (uint112 ureserve0, uint112 ureserve1,) = pair.getReserves();\\r\\n            address token1 = pair.token1();\\r\\n            if(token1!=address(_to)){\\r\\n                ( ureserve0,  ureserve1) = (ureserve1, ureserve0);\\r\\n            }\\r\\n            outAmount = getAmountOut(inAmount, ureserve0, ureserve1);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function unit(address token) public view returns(uint) {\\r\\n        uint _decimals = IERC20(token).decimals();\\r\\n        return 10**_decimals;\\r\\n    }\\r\\n\\r\\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) internal pure returns (uint amountOut) {\\r\\n        require(amountIn > 0, 'PankSwapLibrary: INSUFFICIENT_INPUT_AMOUNT');\\r\\n        require(reserveIn > 0 && reserveOut > 0, 'PankSwapLibrary: INSUFFICIENT_LIQUIDITY');\\r\\n        amountOut = amountIn*reserveOut/reserveIn;\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0xcde018cdfabe9c99324c429c6b8eaa8c5b92411fa21c5957d66a3e0486e3c5da\",\"license\":\"MIT\"},\"contracts/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.8;\\r\\n\\r\\nimport './SafeMath.sol';\\r\\nimport './IERC20.sol';\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // This method relies on extcodesize, which returns 0 for contracts in\\r\\n        // construction, since the code is only stored at the end of the\\r\\n        // constructor execution.\\r\\n\\r\\n        uint256 size;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly { size := extcodesize(account) }\\r\\n        return size > 0;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\r\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain`call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\r\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\r\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a static call.\\r\\n     *\\r\\n     * _Available since v3.3._\\r\\n     */\\r\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\r\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\r\\n     * but performing a delegate call.\\r\\n     *\\r\\n     * _Available since v3.4._\\r\\n     */\\r\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\r\\n        return _verifyCallResult(success, returndata, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\nlibrary SafeERC20 {\\r\\n    \\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\r\\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\r\\n    }\\r\\n\\r\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\r\\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\r\\n    }\\r\\n\\r\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\r\\n        // safeApprove should only be called when setting an initial allowance,\\r\\n        // or when resetting it to zero. To increase and decrease it, use\\r\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\r\\n        // solhint-disable-next-line max-line-length\\r\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\r\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\r\\n        );\\r\\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\r\\n    }\\r\\n\\r\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\r\\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\r\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\r\\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\r\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\r\\n     * @param token The token targeted by the call.\\r\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\r\\n     */\\r\\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\\r\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\r\\n        // we're implementing it ourselves.\\r\\n\\r\\n        // A Solidity high level call has three parts:\\r\\n        //  1. The target address is checked to verify it contains contract code\\r\\n        //  2. The call itself is made, and success asserted\\r\\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\\r\\n        // solhint-disable-next-line max-line-length\\r\\n        require(Address.isContract(address(token)), \\\"SafeERC20: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = address(token).call(data);\\r\\n        require(success, \\\"SafeERC20: low-level call failed\\\");\\r\\n\\r\\n        if (returndata.length > 0) { // Return data is optional\\r\\n            // solhint-disable-next-line max-line-length\\r\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x114923e9027379cb2d6a81b48887b7faea20aef21076b9cbb27d5f9c1d5be042\",\"license\":\"MIT\"},\"contracts/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.8;\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Subtraction cannot overflow.\\r\\n     *\\r\\n     * _Available since v2.4.0._\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     *\\r\\n     * _Available since v2.4.0._\\r\\n     */\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        // Solidity only automatically asserts when dividing by 0\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     * - The divisor cannot be zero.\\r\\n     *\\r\\n     * _Available since v2.4.0._\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2d457838c3d6e7086dd9430900b8696da8ab2c9e55d428db5b76430c88b3d08a\",\"license\":\"MIT\"},\"contracts/invite.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.6.8;\\r\\nimport \\\"./PriceLibrary.sol\\\";\\r\\nimport \\\"./SafeERC20.sol\\\";\\r\\nimport './IERC20.sol';\\r\\nimport './Ownable.sol';\\r\\n\\r\\n\\r\\ncontract DomInvitation is Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    struct user {\\r\\n        uint256 id;\\r\\n        uint256 level;\\r\\n        uint256 burn;\\r\\n        address referrer;\\r\\n    }\\r\\n\\r\\n    uint256 public userCount;\\r\\n    address public primaryAddr;\\r\\n    \\r\\n    address public factory;\\r\\n    address public dead = 0x000000000000000000000000000000000000dEaD;\\r\\n\\r\\n    IERC20 public pToken;\\r\\n    IERC20 public domToken;\\r\\n    IERC20 public usdtToken;\\r\\n\\r\\n    //uint256[10] public marketList = [30, 20, 10, 9, 8, 7, 6, 4, 4, 4];\\r\\n    uint256[10] public marketList = [25, 6, 10, 6, 10, 6, 10, 6, 15, 6];\\r\\n    //uint256[6] public levelList = [0, 100*1e18, 300*1e18, 500*1e18, 1000*1e18, 1500*1e18];\\r\\n    uint256[6] public levelList = [0, 100*1e18, 200*1e18, 200*1e18, 500*1e18, 500*1e18];\\r\\n    \\r\\n    mapping(address => user) public Users;\\r\\n    mapping(uint256 => address) public index2User;\\r\\n    mapping(uint256 => uint256[20]) levelReferMap;\\r\\n\\r\\n    event Register(address indexed _userAddr, address indexed _referrer);\\r\\n    event Promote(address indexed _userAddr, uint256 level);\\r\\n    event Burn(address indexed _userAddr, uint256 _amount);\\r\\n    event Redeem(address indexed _userAddr, uint256 _power);\\r\\n\\r\\n    constructor(IERC20 _pToken, IERC20 _domToken, address _primaryAddr) public {\\r\\n        pToken = _pToken;\\r\\n        domToken = _domToken;\\r\\n        userCount = userCount.add(1);\\r\\n        Users[_primaryAddr].id = userCount;\\r\\n        \\r\\n        index2User[userCount] = _primaryAddr;\\r\\n        primaryAddr = _primaryAddr;\\r\\n        \\r\\n        level_init();\\r\\n        emit Register(_primaryAddr, address(0));\\r\\n    }\\r\\n\\r\\n    function level_init() internal {\\r\\n        // init level 0\\r\\n        levelReferMap[0] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\r\\n        // init level 1\\r\\n        levelReferMap[1] = [15, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\r\\n        // init level 2\\r\\n        levelReferMap[2] = [16, 11, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\r\\n        // init level 3\\r\\n        levelReferMap[3] = [18, 13, 11, 9, 7, 5, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\\r\\n        // init level 4\\r\\n        levelReferMap[4] = [20, 15, 13, 11, 9, 7, 6, 5, 4, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0];\\r\\n        // init level 5\\r\\n        levelReferMap[5] = [25, 20, 15, 13, 11, 9, 7, 5, 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1];\\r\\n    }\\r\\n\\r\\n    function setMarketList(uint256[10] memory _marketList) onlyOwner public {\\r\\n        marketList = _marketList;\\r\\n    }\\r\\n\\r\\n    function setLevelRewardList(uint256 _levelId, uint256[20] memory _levelRewardList) onlyOwner public {\\r\\n        levelReferMap[_levelId] = _levelRewardList;\\r\\n    }\\r\\n\\r\\n    function setPToken(IERC20 _pToken) onlyOwner public {\\r\\n        pToken = _pToken;\\r\\n    }\\r\\n\\r\\n    function setDomToken(IERC20 _domToken) onlyOwner public {\\r\\n        domToken = _domToken;\\r\\n    }\\r\\n\\r\\n    function setFactory(address _factory, IERC20 _usdtToken) onlyOwner public {\\r\\n        usdtToken = _usdtToken;\\r\\n        factory = _factory;\\r\\n    }\\r\\n\\r\\n    function register(address _referrer) public {\\r\\n        require(!Address.isContract(msg.sender), \\\"contract address is forbidden\\\");\\r\\n        require(!isExists(msg.sender), \\\"user exists\\\");\\r\\n        require(isExists(_referrer), \\\"referrer not exists\\\");\\r\\n        user storage regUser = Users[msg.sender];\\r\\n        userCount = userCount.add(1);\\r\\n        regUser.id = userCount;\\r\\n        index2User[userCount] = msg.sender;\\r\\n        regUser.referrer = _referrer;\\r\\n        \\r\\n        \\r\\n        emit Register(msg.sender, _referrer);\\r\\n    }\\r\\n\\r\\n    function isExists(address _userAddr) view public returns (bool) {\\r\\n        return Users[_userAddr].id != 0;\\r\\n    }\\r\\n\\r\\n    function promote(uint256 _level) public {\\r\\n        require(isExists(msg.sender), \\\"user not exists\\\");\\r\\n        require(Users[msg.sender].level < _level, \\\"level is lower than the last one\\\");\\r\\n        require(_level <= 5, \\\"level exceeds\\\");\\r\\n        (uint inAmount, uint outAmount) = PriceLibrary.price(factory, address(usdtToken), address(domToken));\\r\\n        require(outAmount!=0,\\\"Invalid price\\\");\\r\\n        uint256 levelAmount = 0;\\r\\n        // due to promote more than one level\\r\\n        for(uint256 i = Users[msg.sender].level+1; i <= _level; i++) {\\r\\n            levelAmount = levelAmount.add(levelList[i]);\\r\\n        }\\r\\n        uint256 burnAmount = outAmount.mul(levelAmount).div(inAmount);\\r\\n        require(domToken.balanceOf(msg.sender) >= burnAmount, \\\"dom is not enough\\\");\\r\\n        marketReward(msg.sender, burnAmount);\\r\\n        Users[msg.sender].level = _level;\\r\\n        Users[msg.sender].burn = Users[msg.sender].burn.add(burnAmount);\\r\\n        emit Promote(msg.sender, _level);\\r\\n    }\\r\\n\\r\\n    function referReward(address _userAddr, uint256 _power) external {\\r\\n        require(msg.sender == address(pToken), \\\"only pToken can call referReward\\\");\\r\\n        address preAddr = Users[_userAddr].referrer;\\r\\n        for(uint256 i = 0; i < 20; i++) {\\r\\n            if(preAddr == address(0)) {\\r\\n                break;\\r\\n            }\\r\\n            uint256 rewardRate = levelReferMap[Users[preAddr].level][i];\\r\\n            if (rewardRate > 0){\\r\\n                pToken.mint(preAddr, _power.mul(rewardRate).div(100));\\r\\n            }\\r\\n            preAddr = Users[preAddr].referrer;\\r\\n        }\\r\\n        emit Promote(msg.sender, _power);\\r\\n    }\\r\\n\\r\\n    function redeemPower(address _userAddr, uint256 _power) external {\\r\\n        require(msg.sender == address(pToken), \\\"only pToken can call redeemPower\\\");\\r\\n        address preAddr = Users[_userAddr].referrer;\\r\\n        for(uint256 i = 0; i < 20; i++) {\\r\\n            if(preAddr == address(0)) {\\r\\n                break;\\r\\n            }\\r\\n            uint256 rewardRate = levelReferMap[Users[preAddr].level][i];\\r\\n            uint256 bal = pToken.balanceOf(preAddr);\\r\\n            uint256 rew = _power.mul(rewardRate).div(100);\\r\\n            if (rew > bal) {\\r\\n                pToken.burn(preAddr, bal);\\r\\n            } else {\\r\\n                pToken.burn(preAddr, rew);\\r\\n            }\\r\\n            preAddr = Users[preAddr].referrer;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function marketReward(address _userAddr, uint256 _amount) internal{\\r\\n        address preAddr = Users[_userAddr].referrer;\\r\\n        uint256 amount = _amount.div(2);\\r\\n        uint256 rewardTotalAmount = 0;\\r\\n        for(uint256 i = 0; i < 10; i++) {\\r\\n\\r\\n            if(preAddr == address(0)) {\\r\\n                break;\\r\\n            }\\r\\n            uint256 level = Users[preAddr].level;\\r\\n            \\r\\n            if(i<level.mul(2)) {\\r\\n                uint256 rewardAmount = amount.mul(marketList[i]).div(100);\\r\\n                domToken.transferFrom(msg.sender, preAddr, rewardAmount);\\r\\n                rewardTotalAmount = rewardTotalAmount.add(rewardAmount);\\r\\n            }\\r\\n            \\r\\n            preAddr = Users[preAddr].referrer;\\r\\n        }\\r\\n        domToken.transferFrom(msg.sender, dead, _amount.sub(rewardTotalAmount));\\r\\n        emit Burn(msg.sender, _amount.sub(rewardTotalAmount));\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x61516c9ba1d24f0adcbccb03259acf32cc6d4aa75379129d7bdd17217016dab7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80635e825564116100de578063a995a6dc11610097578063e0d4f1c311610071578063e0d4f1c314610460578063e30c39781461049a578063eb5d9779146104a2578063fe8f3769146104aa57610173565b8063a995a6dc146103f7578063c45a015514610450578063cb0b586c1461045857610173565b80635e825564146103215780638da5cb5b1461034f57806396bb4fae14610357578063988155941461037d57806399b956a01461039a578063a98ad46c146103ef57610173565b80634420e486116101305780634420e4861461027c57806347257cd8146102a257806347d01b63146102ce5780634e71e0c8146102f45780635455429e146102fc57806358a06f071461031957610173565b8063078dfbe71461017857806307973ccf146101b057806311853027146101ca578063193afc0a1461021e578063232b956c1461025757806336cf7c8714610274575b600080fd5b6101ae6004803603606081101561018e57600080fd5b506001600160a01b038135169060208101351515906040013515156104d6565b005b6101b861060c565b60408051918252519081900360200190f35b6101ae60048036036101408110156101e157600080fd5b81019080806101400190600a806020026040519081016040528092919082600a602002808284376000920191909152509194506106129350505050565b61023b6004803603602081101561023457600080fd5b5035610670565b604080516001600160a01b039092168252519081900360200190f35b6101b86004803603602081101561026d57600080fd5b503561068b565b61023b61069f565b6101ae6004803603602081101561029257600080fd5b50356001600160a01b03166106ae565b6101ae600480360360408110156102b857600080fd5b506001600160a01b03813516906020013561082f565b6101ae600480360360208110156102e457600080fd5b50356001600160a01b0316610a09565b6101ae610a78565b6101ae6004803603602081101561031257600080fd5b5035610b3a565b61023b610ebb565b6101ae6004803603604081101561033757600080fd5b506001600160a01b0381358116916020013516610eca565b61023b610f48565b6101ae6004803603602081101561036d57600080fd5b50356001600160a01b0316610f57565b6101b86004803603602081101561039357600080fd5b5035610fc6565b6103c0600480360360208110156103b057600080fd5b50356001600160a01b0316610fd3565b604080519485526020850193909352838301919091526001600160a01b03166060830152519081900360800190f35b61023b611003565b6101ae60048036036102a081101561040e57600080fd5b6040805161028081810190925283359392830192916102a083019190602084019060149083908390808284376000920191909152509194506110129350505050565b61023b611079565b61023b611088565b6104866004803603602081101561047657600080fd5b50356001600160a01b0316611097565b604080519115158252519081900360200190f35b61023b6110b4565b61023b6110c3565b6101ae600480360360408110156104c057600080fd5b506001600160a01b0381351690602001356110d2565b6000546001600160a01b03163314610523576040805162461bcd60e51b8152602060048201819052602482015260008051602061187d833981519152604482015290519081900360640190fd5b81156105eb576001600160a01b03831615158061053d5750805b610586576040805162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b604482015290519081900360640190fd5b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055610607565b600180546001600160a01b0319166001600160a01b0385161790555b505050565b60025481565b6000546001600160a01b0316331461065f576040805162461bcd60e51b8152602060048201819052602482015260008051602061187d833981519152604482015290519081900360640190fd5b61066c600982600a6117db565b5050565b601a602052600090815260409020546001600160a01b031681565b600981600a811061069857fe5b0154905081565b6005546001600160a01b031681565b6106b7336113b5565b15610709576040805162461bcd60e51b815260206004820152601d60248201527f636f6e7472616374206164647265737320697320666f7262696464656e000000604482015290519081900360640190fd5b61071233611097565b15610752576040805162461bcd60e51b815260206004820152600b60248201526a757365722065786973747360a81b604482015290519081900360640190fd5b61075b81611097565b6107a2576040805162461bcd60e51b81526020600482015260136024820152727265666572726572206e6f742065786973747360681b604482015290519081900360640190fd5b3360009081526019602052604090206002546107bf906001611352565b60028190558082556000908152601a602052604080822080546001600160a01b0319908116339081179092556003850180546001600160a01b0388169216821790559151919290917f98ada70a1cb506dc4591465e1ee9be3fd7a2b6c73ecf3b949009718c9a3515199190a35050565b6006546001600160a01b0316331461088e576040805162461bcd60e51b815260206004820181905260248201527f6f6e6c792070546f6b656e2063616e2063616c6c207265666572526577617264604482015290519081900360640190fd5b6001600160a01b03808316600090815260196020526040812060030154909116905b60148110156109cd576001600160a01b0382166108cc576109cd565b6001600160a01b0382166000908152601960209081526040808320600101548352601b909152812082601481106108ff57fe5b0154905080156109a3576006546001600160a01b03166340c10f1984610930606461092a89876113bb565b90611414565b6040518363ffffffff1660e01b815260040180836001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561097657600080fd5b505af115801561098a573d6000803e3d6000fd5b505050506040513d60208110156109a057600080fd5b50505b506001600160a01b03918216600090815260196020526040902060030154909116906001016108b0565b5060408051838152905133917fab3987389ddba2f2869294ed42df3352610ed801bd6a43a5277e0c42d6cf0255919081900360200190a2505050565b6000546001600160a01b03163314610a56576040805162461bcd60e51b8152602060048201819052602482015260008051602061187d833981519152604482015290519081900360640190fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316338114610ad8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b610b4333611097565b610b86576040805162461bcd60e51b815260206004820152600f60248201526e75736572206e6f742065786973747360881b604482015290519081900360640190fd5b336000908152601960205260409020600101548111610bec576040805162461bcd60e51b815260206004820181905260248201527f6c6576656c206973206c6f776572207468616e20746865206c617374206f6e65604482015290519081900360640190fd5b6005811115610c32576040805162461bcd60e51b815260206004820152600d60248201526c6c6576656c206578636565647360981b604482015290519081900360640190fd5b600480546008546007546040805163b9b2e68f60e01b81526001600160a01b0394851695810195909552918316602485015290911660448301528051600092839273__$1139795562d0ae445497d3fa43a7ed0192$__9263b9b2e68f926064808201939291829003018186803b158015610cab57600080fd5b505af4158015610cbf573d6000803e3d6000fd5b505050506040513d6040811015610cd557600080fd5b508051602090910151909250905080610d25576040805162461bcd60e51b815260206004820152600d60248201526c496e76616c696420707269636560981b604482015290519081900360640190fd5b336000908152601960205260408120600190810154015b848111610d6657610d5c60138260068110610d5357fe5b01548390611352565b9150600101610d3c565b506000610d778461092a85856113bb565b600754604080516370a0823160e01b8152336004820152905192935083926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610dc757600080fd5b505afa158015610ddb573d6000803e3d6000fd5b505050506040513d6020811015610df157600080fd5b50511015610e3a576040805162461bcd60e51b81526020600482015260116024820152700c8deda40d2e640dcdee840cadcdeeaced607b1b604482015290519081900360640190fd5b610e443382611456565b3360009081526019602052604090206001810186905560020154610e689082611352565b33600081815260196020908152604091829020600201939093558051888152905191927fab3987389ddba2f2869294ed42df3352610ed801bd6a43a5277e0c42d6cf025592918290030190a25050505050565b6006546001600160a01b031681565b6000546001600160a01b03163314610f17576040805162461bcd60e51b8152602060048201819052602482015260008051602061187d833981519152604482015290519081900360640190fd5b600880546001600160a01b039283166001600160a01b03199182161790915560048054939092169216919091179055565b6000546001600160a01b031681565b6000546001600160a01b03163314610fa4576040805162461bcd60e51b8152602060048201819052602482015260008051602061187d833981519152604482015290519081900360640190fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6013816006811061069857fe5b6019602052600090815260409020805460018201546002830154600390930154919290916001600160a01b031684565b6008546001600160a01b031681565b6000546001600160a01b0316331461105f576040805162461bcd60e51b8152602060048201819052602482015260008051602061187d833981519152604482015290519081900360640190fd5b6000828152601b6020526040902061060790826014611819565b6004546001600160a01b031681565b6007546001600160a01b031681565b6001600160a01b0316600090815260196020526040902054151590565b6001546001600160a01b031681565b6003546001600160a01b031681565b6006546001600160a01b03163314611131576040805162461bcd60e51b815260206004820181905260248201527f6f6e6c792070546f6b656e2063616e2063616c6c2072656465656d506f776572604482015290519081900360640190fd5b6001600160a01b03808316600090815260196020526040812060030154909116905b601481101561134c576001600160a01b03821661116f5761134c565b6001600160a01b0382166000908152601960209081526040808320600101548352601b909152812082601481106111a257fe5b0154600654604080516370a0823160e01b81526001600160a01b038781166004830152915193945060009391909216916370a08231916024808301926020929190829003018186803b1580156111f757600080fd5b505afa15801561120b573d6000803e3d6000fd5b505050506040513d602081101561122157600080fd5b505190506000611236606461092a88866113bb565b9050818111156112b25760065460408051632770a7eb60e21b81526001600160a01b0388811660048301526024820186905291519190921691639dc29fac91604480830192600092919082900301818387803b15801561129557600080fd5b505af11580156112a9573d6000803e3d6000fd5b50505050611320565b60065460408051632770a7eb60e21b81526001600160a01b0388811660048301526024820185905291519190921691639dc29fac91604480830192600092919082900301818387803b15801561130757600080fd5b505af115801561131b573d6000803e3d6000fd5b505050505b5050506001600160a01b0391821660009081526019602052604090206003015490911690600101611153565b50505050565b6000828201838110156113ac576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b3b151590565b6000826113ca575060006113af565b828202828482816113d757fe5b04146113ac5760405162461bcd60e51b815260040180806020018281038252602181526020018061185c6021913960400191505060405180910390fd5b60006113ac83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506116a2565b6001600160a01b0380831660009081526019602052604081206003015490911690611482836002611414565b90506000805b600a8110156115b5576001600160a01b0384166114a4576115b5565b6001600160a01b0384166000908152601960205260409020600101546114cb8160026113bb565b82101561158b5760006114f2606461092a600986600a81106114e957fe5b015488906113bb565b600754604080516323b872dd60e01b81523360048201526001600160a01b038a811660248301526044820185905291519394509116916323b872dd916064808201926020929091908290030181600087803b15801561155057600080fd5b505af1158015611564573d6000803e3d6000fd5b505050506040513d602081101561157a57600080fd5b5061158790508482611352565b9350505b506001600160a01b0393841660009081526019602052604090206003015490931692600101611488565b506007546005546001600160a01b03918216916323b872dd913391166115db8886611744565b6040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050602060405180830381600087803b15801561163157600080fd5b505af1158015611645573d6000803e3d6000fd5b505050506040513d602081101561165b57600080fd5b503390507fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca561168a8684611744565b60408051918252519081900360200190a25050505050565b6000818361172e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116f35781810151838201526020016116db565b50505050905090810190601f1680156117205780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161173a57fe5b0495945050505050565b60006113ac83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250600081848411156117d35760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156116f35781810151838201526020016116db565b505050900390565b82600a8101928215611809579160200282015b828111156118095782518255916020019190600101906117ee565b50611815929150611846565b5090565b826014810192821561180957916020028201828111156118095782518255916020019190600101906117ee565b5b80821115611815576000815560010161184756fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a264697066735822122020acb24cf2f13430216733bef17cee64145a7e81b0dd5471438cc2b61c5c2efe64736f6c634300060c0033",
  "libraries": {
    "PriceLibrary": "0xF3ed1A8248EC2488b831835b98208f6329A89768"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2972,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2974,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "pendingOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 3987,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "userCount",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 3989,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "primaryAddr",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 3991,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "factory",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 3994,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "dead",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 3996,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "pToken",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(IERC20)2648"
      },
      {
        "astId": 3998,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "domToken",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(IERC20)2648"
      },
      {
        "astId": 4000,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "usdtToken",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(IERC20)2648"
      },
      {
        "astId": 4015,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "marketList",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint256)10_storage"
      },
      {
        "astId": 4036,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "levelList",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_uint256)6_storage"
      },
      {
        "astId": 4040,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "Users",
        "offset": 0,
        "slot": "25",
        "type": "t_mapping(t_address,t_struct(user)3985_storage)"
      },
      {
        "astId": 4044,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "index2User",
        "offset": 0,
        "slot": "26",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 4050,
        "contract": "contracts/invite.sol:DomInvitation",
        "label": "levelReferMap",
        "offset": 0,
        "slot": "27",
        "type": "t_mapping(t_uint256,t_array(t_uint256)20_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)10_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[10]",
        "numberOfBytes": "320"
      },
      "t_array(t_uint256)20_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[20]",
        "numberOfBytes": "640"
      },
      "t_array(t_uint256)6_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[6]",
        "numberOfBytes": "192"
      },
      "t_contract(IERC20)2648": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(user)3985_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct DomInvitation.user)",
        "numberOfBytes": "32",
        "value": "t_struct(user)3985_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_array(t_uint256)20_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[20])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)20_storage"
      },
      "t_struct(user)3985_storage": {
        "encoding": "inplace",
        "label": "struct DomInvitation.user",
        "members": [
          {
            "astId": 3978,
            "contract": "contracts/invite.sol:DomInvitation",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 3980,
            "contract": "contracts/invite.sol:DomInvitation",
            "label": "level",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3982,
            "contract": "contracts/invite.sol:DomInvitation",
            "label": "burn",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 3984,
            "contract": "contracts/invite.sol:DomInvitation",
            "label": "referrer",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}